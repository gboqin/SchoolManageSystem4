@{
    Layout = null;
}
<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <title>角色管理</title>
    <script type="text/javascript" src="@Url.Content("~/lib/jquery/dist/jquery.js")"></script>
    <link rel="stylesheet" href="@Url.Content("~/lib/layui/css/layui.css")" />
    <link rel="stylesheet" href="@Url.Content("~/lib/layui/css/soulTable.css")" media="all" />
</head>
<body style="width:100%;height:100%;margin:0;padding:0">
    <script type="text/html" id="toolbar">
        <div class="layui-form-item" style="margin-bottom:5px">
            <label class="layui-form-label" style="width:auto" for="rolename">角色名称</label>
            <div class="layui-input-inline">
                <input type="text" style=" height: 30px; line-height: 30px" id="rolename" name="rolename" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input layui-input-sm">
            </div>
            <div class="layui-input-inline"><button class="layui-btn layui-btn-sm"><i class="layui-icon layui-icon-search"></i>查询</button></div>
        </div>
        <div class="layui-form-item" style="margin-bottom:5px">
            <button class="layui-btn layui-btn-normal layui-btn-sm"><i class="layui-icon layui-icon-add-circle-fine"></i>添加</button>
            <button class="layui-btn layui-btn-sm" lay-event="clearFilter">清除所有筛选条件</button>
        </div>
    </script>
    <script type="text/html" id="bar">
        <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
        <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="del">分配权限</a>
    </script>
    <table id="myTable" style="margin: 0; padding: 0"></table>
    <script type="text/javascript" src="@Url.Content("~/lib/layui/layui.js")"></script>
    <script type="text/javascript">
        //layui.config({
        //    base: '/lib/layui/soul-table/'      //自定义layui组件的目录
        //}).extend({ //设定组件别名
        //    common: 'common', // 如果相同可以不设置别名
        //});

        //layui.use(['common'],
        //    function () {
        //        let common = layui.common;
        //        common.test();
        //    }
        //);
        // 监听浏览器窗口大小变化 实现不了
        //var resizeTimer;
        //$(window).resize(function () {
        //    if (resizeTimer) {
        //        clearTimeout(resizeTimer);
        //    }
        //    resizeTimer = setTimeout(function () {
        //        resizeTimer = null;
        //        autoFixed();
        //    },
        //        200);
        //});


        //// 监听表头鼠标按下事件 实现不了
        //$(document).on('mousedown', 'thead',
        //    function (e) {
        //        var that = $(this);
        //        $(document).one('mouseup',
        //            function () {
        //                autoFixed(that.parents('.layui-table-view'));
        //            })
        //    });

        layui.config({
            base: '/lib/layui/soul-table/',   // 第三方模块所在目录
            version: 'v1.6.4' // 插件版本号
        }).extend({ // 模块别名
            soulTable: 'soulTable',
            ableChild: 'tableChild',
            tableFilter: 'tableFilter',
            tableMerge: 'tableMerge',
            excel: 'excel'
        });

        layui.use(['form', 'table', 'soulTable'], function () {
            var table = layui.table
                , soulTable = layui.soulTable;

            // 后台分页
            table.render({
                elem: '#myTable'
                , id: 'myTable'
                , url: '/Json/dataGrid.json'
                , contentType: 'application/json'
                , height: 'full-0'
                , toolbar: '#toolbar'
                , defaultToolbar: []//去掉默认的defaultToolbar: [ ‘filter’, ‘print’, ‘exports’]
                , filter: { items: ['colum', 'data', 'condition', 'editCondition'], bottom: false }
                , cols: [[
                    { type: 'checkbox', fixed: 'left' },
                    { field: 'title', title: '诗词', width: 200, sort: true, filter: true },
                    { field: 'dynasty', title: '朝代', width: 100, sort: true, filter: true },
                    { field: 'author', title: '作者', width: 165, filter: true },
                    { field: 'type', title: '类型', width: 112, filter: { split: ',' }, sort: true },
                    { field: 'content', title: '内容', width: 823, filter: true },
                    { field: 'heat', title: '点赞数', width: 112, filter: true, sort: true, excel: { cellType: 'n' } },
                    { field: 'createTime', title: '录入时间', width: 165, filter: { type: 'date[yyyy-MM-dd HH:mm:ss]' }, sort: true },
                    { title: '操作', width: 190, fixed: 'right', templet: '#bar' }
                ]]
                , margin: 0
                //加分页功能
                , page: true
                , limits: [10, 20, 50]  //一页选择显示3,5或10条数据
                , limit: 10  //一页显示10条数据
                , parseData: function (res) { //将原始数据解析成 table 组件所规定的数据，res为从url中get到的数据
                    var result;
                    if (this.page.curr) {
                        result = res.data.slice(this.limit * (this.page.curr - 1), this.limit * this.page.curr);
                    }
                    else {
                        result = res.data.slice(0, this.limit);
                    }
                    return {
                        "code": res.code, //解析接口状态
                        "msg": res.msg, //解析提示文本
                        "count": res.count, //解析数据长度
                        "data": result //解析数据列表
                    };
                }
                , done: function (res, curr, count) {
                    $('th').css({ 'background-color': '#bdccea', 'color': 'black', 'font-weight': 'bold' });
                    $('layui-table-total.layui-table tbody tr').css({ 'color': 'red' });
                    $('.layui-table-total.layui-table tbody tr').css({ 'background-color': '#ffffb4' });
                    $('.layui-table-tool').css({ 'padding': '5px 15px' });
                    $('.layui-table,.layui-table-view').css({ 'padding': '0px', 'margin': '0px' });
                    $('.layui-table tr,.layui-table td, .layui-table th, .layui-table-col-set, .layui-table-fixed-r, .layui-table-grid-down, .layui-table-header, .layui-table-page, .layui-table-tips-main, .layui-table-tool, .layui-table-total, .layui-table-view, [lay-skin=line].layui-table, [lay-skin=row].layui-table').css({ 'border-color': '#ddd' });
                    $('.layui-table-cell').css({ 'height': '25px', 'height-line': '25px' });

                    //单元格根据内容自动适应宽度
                    //$('.layui-table-cell').css({ 'display': 'table-cell', 'vertical-align': 'middle' });
                    var that = this.elem.next(); res.data.forEach(function (item, index) {
                        //console.log(item.empName);item表示每列显示的数据
                        if (index % 2 == 0) {
                            var tr = that.find(".layui-table-box tbody tr[data-index='" + index + "']").css({ 'background-color': '#ecedff' }).addClass('addclass');
                        } else {
                            var tr = that.find(".layui-table-box tbody tr[data-index='" + index + "']").css('background-color', '#E0EEF6').addClass('addclass');
                        }
                    });
                    // 使用 实现不了
                    /*autoFixed($(this.elem[0]).next());*/
                    soulTable.render(this)
                }

            });

            table.on('toolbar(myTable)', function (obj) {
                if (obj.event === 'clearFilter') {
                    // 清除所有筛选条件并重载表格
                    // 参数: tableId
                    alert("clear");
                    soulTable.clearFilter('myTable')
                }
            });
        });

        //实现不了
        //function autoFixed(tableElem) {
        //    var $tableView = tableElem || $(".layui-table-view");
        //    var dataIndex, trHeight;
        //    $tableView.each(function () {
        //        // 获取两侧浮动栏
        //        var $fixed = $(this).find(".layui-table-fixed");
        //        // 同步表头高度
        //        $fixed.find(".layui-table-header  tr").height($(this).find(".layui-table-header tr").eq(0).height());
        //        //遍历tr 修正浮动栏行高
        //        $(this).find(".layui-table-main tr").each(function () {
        //            dataIndex = $(this).attr("data-index");
        //            trHeight = $(this).css("height");
        //            $fixed.find("tr[data-index=" + dataIndex + "]").css("height",  trHeight);
        //        })
        //        // 将固定列header的高度设置一下
        //        $fixed.find(".layui-table-header  th").height($(this).find(".layui-table-header th").eq(0).height());
        //    });
        //}

    </script>
</body>
</html>
